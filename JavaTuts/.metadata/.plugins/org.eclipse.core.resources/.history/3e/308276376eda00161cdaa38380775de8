import java.awt.Color;
import java.awt.Image.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

public class EdgeDetector {

    // truncate color component to be between 0 and 255
    public static int truncate(int a) {
        if      (a <   0) return 0;
        else if (a > 255) return 255;
        else              return a;
    }

    public static void main(String[] args) {

        int[][] filter1 = {
            { -1,  0,  1 },
            { -2,  0,  2 },
            { -1,  0,  1 }
        };

        int[][] filter2 = {
            {  1,  2,  1 },
            {  0,  0,  0 },
            { -1, -2, -1 }
        };

        BufferedImage picture0 = null;
	    try {
	    	picture0 = ImageIO.read(new File("/media/morpheus/Volume/Tuts/JavaTuts/Bildbearbeitung/src/wallpaper-1467792.jpg"));
	    } catch (IOException e) {
	    	System.out.println(e.getMessage());
        }
	    
        int width    = picture0.getWidth();
        int height   = picture0.getHeight();


        double[][] gray = new double[picture0.getWidth()][picture0.getHeight()];
        for (int y = 0; y < height; y++) {
            for (int x = 0; x < width; x++) {
            	Color pixel = new Color(picture0.getRGB(x, y));
                gray[x][y] = 0.299*pixel.getRed()  + 0.587*pixel.getGreen()  + 0.114*pixel.getBlue() ;
            }
        }

        for (int y = 1; y < height - 1; y++) {
            for (int x = 1; x < width - 1; x++) {  
                int gray1 = 0;
                int gray2 = 0;
                // apply filter
                for (int i = -1; i < 1; i++) {
                    for (int j = -1; j < 1; j++) {
                        gray1 += gray[x+i][y+j] * filter1[1+i][1+j];
                        gray2 += gray[x+i][y+j] * filter2[1+i][1+j];
                        
                    }
                }
                // int magnitude = 255 - truncate(Math.abs(gray1) + Math.abs(gray2));
                int magnitude = 255 - truncate((int) Math.sqrt(gray1*gray1 + gray2*gray2));
                Color grayscale = new Color(magnitude, magnitude, magnitude);
                picture0.setRGB(x, y, grayscale.getRGB());
            }
        }
        File f = null;
        try{
        	  f = new File("Output.jpg");
        	  ImageIO.write(picture0, "jpg", f);
        	}catch(IOException e){
        	  System.out.println(e);
        	}
    }

   
}